name: Build and Deploy Qt EXE using aqtinstall

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Debug workspace
      shell: pwsh
      run: |
        Write-Host "üîç Current directory:"
        Get-Location

        Write-Host "üì¶ All files in workspace:"
        Get-ChildItem -Recurse -Force | Select-Object FullName

    - name: Install Qt via aqtinstall (with windeployqt)
      shell: bash
      run: |
        pip install aqtinstall
        aqt install-qt windows desktop 6.8.3 win64_mingw -m qttools qtbase
        echo "$GITHUB_WORKSPACE/Qt/6.8.3/mingw_64/bin" >> $GITHUB_PATH

    - name: Add Qt to PATH (Windows path version)
      shell: pwsh
      run: |
        echo "${{ github.workspace }}\Qt\6.8.3\mingw_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build test_0.pro using qmake + mingw32-make
      shell: pwsh
      run: |
        cd Packet_Versions/Packet1
        qmake test_0.pro CONFIG-=no_main CONFIG+=console
        mingw32-make

    - name: Find and deploy EXE with windeployqt
      shell: pwsh
      run: |
        $exe = Get-ChildItem -Path . -Recurse -Filter *.exe | Where-Object { $_.FullName -notmatch '\\windeployqt\\' } | Select-Object -First 1

        if (-not $exe) {
          Write-Error "‚ùå ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ£Ÿä ŸÖŸÑŸÅ .exe" ; exit 1
        }

        Write-Host "‚úÖ Found EXE: $($exe.FullName)"

        $windeploy = Get-ChildItem -Path "${{ github.workspace }}\Qt" -Recurse -Filter windeployqt.exe | Select-Object -First 1
        if (-not $windeploy) {
          Write-Error "‚ùå windeployqt.exe not found" ; exit 1
        }

        & "$($windeploy.FullName)" "$($exe.FullName)"

    - name: Upload built files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployed-exe-with-dlls
        path: |
          **/*.exe
          **/*.dll
