name: Build and Deploy Qt EXE using aqtinstall (fixed upload)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Install aqtinstall
      - name: Install aqtinstall
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install aqtinstall

      # 3) Download Qt via aqtinstall & add windeployqt to PATH
      - name: Download Qt and locate windeployqt
        shell: pwsh
        run: |
          aqt install-qt windows desktop 6.8.3 win64_mingw --outputdir Qt
          $windeploy = Get-ChildItem -Path "${{ github.workspace }}\Qt" -Recurse -Filter windeployqt.exe | Select-Object -First 1
          if (-not $windeploy) { Write-Error "‚ùå windeployqt.exe not found" ; exit 1 }
          # ÿ£ÿ∂ŸÅ ŸÖÿ≥ÿßÿ± bin ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑÿ£ÿØÿßÿ© ÿ•ŸÑŸâ PATH
          "$($windeploy.DirectoryName)" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Host "‚úÖ windeployqt found at $($windeploy.FullName)"

      # 4) Build the project
      - name: Build test_0.pro
        shell: pwsh
        run: |
          cd Packet_Versions/Packet1
          qmake test_0.pro CONFIG-=no_main CONFIG+=console
          mingw32-make

      # 5) Find the generated EXE and its directory
      - name: Find generated .exe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path Packet_Versions/Packet1 -Recurse -Filter *.exe |
                 Where-Object { $_.FullName -notmatch 'windeployqt' } |
                 Select-Object -First 1
          if (-not $exe) { Write-Error "‚ùå No .exe found after build"; exit 1 }
          $exePath = $exe.FullName
          $exeDir  = Split-Path $exePath -Parent
          Write-Host "‚úÖ Found EXE at: $exePath"
          # ÿµÿØŸëÿ± ÿßŸÑŸÖÿ™ÿ∫Ÿäÿ±ŸäŸÜ ŸÑŸÑÿ®Ÿäÿ¶ÿ©
          "EXE_PATH=$exePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "EXE_DIR=$exeDir"   | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # 6) Deploy Qt dependencies
      - name: Deploy Qt dependencies with windeployqt
        shell: pwsh
        run: |
          Write-Host "üöÄ Deploying dependencies for $env:EXE_PATH"
          Push-Location $env:EXE_DIR
          windeployqt (Split-Path $env:EXE_PATH -Leaf)
          Pop-Location

      # 7) Upload all files under EXE_DIR (includes .exe, .dll, plugins‚Ä¶)
      - name: Upload deployed-exe-with-dlls artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployed-exe-with-dlls
          path: |
            ${{ env.EXE_DIR }}/**/*
