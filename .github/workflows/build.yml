name: Build and Deploy Qt EXE using aqtinstall (fixed deploy)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install aqtinstall
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install aqtinstall

      - name: Download Qt via aqtinstall
        shell: pwsh
        run: |
          aqt install-qt windows desktop 6.8.3 win64_mingw --outputdir Qt
          # أضِف bin لأي نسخة Qt وجدت
          $windeploy = Get-ChildItem -Path "${{ github.workspace }}\Qt" -Recurse -Filter windeployqt.exe | Select-Object -First 1
          if (-not $windeploy) { Write-Error "❌ windeployqt.exe not found" ; exit 1 }
          "$($windeploy.DirectoryName)" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Host "✅ windeployqt found at $($windeploy.FullName)"

      - name: Build test_0.pro
        shell: pwsh
        run: |
          cd Packet_Versions/Packet1
          qmake test_0.pro CONFIG-=no_main CONFIG+=console
          mingw32-make

      - name: Find generated .exe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path Packet_Versions/Packet1 -Recurse -Filter *.exe |
                 Where-Object { $_.FullName -notmatch 'windeployqt' } |
                 Select-Object -First 1
          if (-not $exe) { Write-Error "❌ No .exe found after build" ; exit 1 }
          Write-Host "✅ Found EXE at: $($exe.FullName)"
          "EXE_PATH=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Deploy Qt dependencies
        shell: pwsh
        run: |
          Write-Host "🚀 Deploying dependencies for $env:EXE_PATH"
          # تأكد أنّ windeployqt في PATH
          Get-Command windeployqt
          # شغّل windeployqt في مجلد EXE
          $outDir = Split-Path $env:EXE_PATH -Parent
          Push-Location $outDir
          windeployqt (Split-Path $env:EXE_PATH -Leaf)
          Pop-Location

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployed-exe-with-dlls
          path: |
            ${{ env:EXE_PATH }}         # EXE نفسه
            $(Split-Path ${{ env:EXE_PATH }} -Parent)/**/*  # كل ملفات المجلد الفرعي
