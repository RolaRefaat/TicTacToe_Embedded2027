name: Build and Deploy Qt 6.8.3 EXE (strict build-dir search)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Install aqtinstall
      - name: Install aqtinstall
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install aqtinstall

      # 3) Download Qt 6.8.3 & locate windeployqt
      - name: Download Qt and locate windeployqt
        shell: pwsh
        run: |
          aqt install-qt windows desktop 6.8.3 win64_mingw --outputdir Qt
          $qtRoot = "${{ github.workspace }}\Qt\6.8.3"
          $spec = Get-ChildItem -Path $qtRoot -Directory |
                  Where-Object { Test-Path (Join-Path $_.FullName 'bin\windeployqt.exe') } |
                  Select-Object -First 1
          if (-not $spec) { Write-Error "‚ùå windeployqt.exe not found under $qtRoot"; exit 1 }
          $qtBin = Join-Path $spec.FullName 'bin'
          Write-Host "‚úÖ Found Qt bin at: $qtBin"
          "$qtBin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # 4) Build the project
      - name: Build test_0.pro
        shell: pwsh
        run: |
          cd Packet_Versions/Packet1
          qmake test_0.pro CONFIG-=no_main CONFIG+=console
          mingw32-make
          # ÿÆÿ≤ŸëŸÜ ŸÖÿ≥ÿßÿ± ŸÖÿ¨ŸÑÿØ ÿßŸÑÿ®ŸÜÿßÿ° ŸÑŸÑÿÆŸäÿßÿ± ŸÑÿßÿ≠ŸÇÿßŸã
          "BUILD_DIR=$(Get-Location)\build" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # 5) Find the generated EXE *only* under BUILD_DIR
      - name: Find generated .exe in build dir
        shell: pwsh
        run: |
          $buildDir = $env:BUILD_DIR
          Write-Host "üîç Searching for .exe under $buildDir"
          $exe = Get-ChildItem -Path $buildDir -Recurse -Filter '*.exe' | Select-Object -First 1
          if (-not $exe) {
            Write-Error "‚ùå No .exe found under build directory $buildDir"
            exit 1
          }
          $exePath = $exe.FullName
          $exeDir  = Split-Path $exePath -Parent
          Write-Host "‚úÖ Found built EXE at: $exePath"
          "EXE_PATH=$exePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "EXE_DIR=$exeDir"   | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # 6) Deploy dependencies with windeployqt
      - name: Deploy Qt dependencies with windeployqt
        shell: pwsh
        run: |
          Write-Host "üöÄ Deploying dependencies for $env:EXE_PATH"
          Push-Location $env:EXE_DIR
          windeployqt (Split-Path $env:EXE_PATH -Leaf)
          Pop-Location

      # 7) Upload everything in EXE_DIR
      - name: Upload deployed files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployed-exe-with-dlls
          path: ${{ env.EXE_DIR }}/**/*
